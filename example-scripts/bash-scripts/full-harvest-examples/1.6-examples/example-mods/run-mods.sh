#!/bin/bash

#Copyright (c) 2010-2011 VIVO Harvester Team. For full list of contributors, please see the AUTHORS file provided.
#All rights reserved.
#This program and the accompanying materials are made available under the terms of the new BSD license which accompanies this distribution, and is available at http://www.opensource.org/licenses/bsd-license.html
  
# set to the directory where the harvester was installed or unpacked
# HARVESTER_INSTALL_DIR is set to the location of the installed harvester
#	If the deb file was used to install the harvester then the
#	directory should be set to /usr/share/vivo/harvester which is the
#	current location associated with the deb installation.
#	Since it is also possible the harvester was installed by
#	uncompressing the tar.gz the setting is available to be changed
#	and should agree with the installation location
HARVESTER_INSTALL_DIR=/usr/local/src/VIVO-Harvester
#HARVESTER_INSTALL_DIR=/usr/share/vivo/harvester
export HARVEST_NAME=example-mods
export DATE=`date +%Y-%m-%d'T'%T`

# Add harvester binaries to path for execution
# The tools within this script refer to binaries supplied within the harvester
#	Since they can be located in another directory their path should be
#	included within the classpath and the path environment variables.
export PATH=$PATH:$HARVESTER_INSTALL_DIR/bin
export CLASSPATH=$CLASSPATH:$HARVESTER_INSTALL_DIR/build/harvester.jar:$HARVESTER_INSTALL_DIR/build/dependency/*
export CLASSPATH=$CLASSPATH:$HARVESTER_INSTALL_DIR/bin/harvester.jar:$HARVESTER_INSTALL_DIR/bin/dependency/*

# Exit on first error
# The -e flag prevents the script from continuing even though a tool fails.
#	Continuing after a tool failure is undesirable since the harvested
#	data could be rendered corrupted and incompatible.
set -e

# Supply the location of the detailed log file which is generated during the script.
#	If there is an issue with a harvest, this file proves invaluable in finding
#	a solution to the problem. It has become common practice in addressing a problem
#	to request this file. The passwords and usernames are filtered out of this file
#	to prevent these logs from containing sensitive information.
echo "Full Logging in $HARVEST_NAME.$DATE.log"
if [ ! -d logs ]; then
  mkdir logs
fi
cd logs
touch $HARVEST_NAME.$DATE.log
ln -sf $HARVEST_NAME.$DATE.log $HARVEST_NAME.latest.log
cd ..

#clear old data
# For a fresh harvest, the removal of the previous information maintains data integrity.
#	If you are continuing a partial run or wish to use the old and already retrieved
#	data, you will want to comment out this line since it could prevent you from having
# 	the required harvest data.  
rm -rf data


#RunBibutils
# Run the Bibutils tool on the input data, to translate it from its native format into
#	MODS format.
harvester-runbibutils -X runbibutils.conf.xml

#SanitizeMODSXML
# Clean up bad characters and XML attributes from the output of Bibutils.
harvester-sanitizemodsxml -X sanitizemodsxml.conf.xml

#XSLTranslator
# Translate from MODS format into RDF/XML.
harvester-xsltranslator -X xsltranslator.conf.xml

#Transfer
# Transfer the RDF/XML data into a Jena model which is needed for the rest of the tools.
harvester-transfer -X transfer-records-to-model.conf.xml

#Score on publications
# Compare names of publications in VIVO with names of publications from MODS and assign a
#	score value indicating how likely they are the same publication.
harvester-score -X score-pub.conf.xml

#Match publications
# Use the score values from the previous score to rename publications which we deem are the
#	same, so that they match the URI of the publication in VIVO. 
harvester-match -X match-pub.conf.xml

#Score on authors, organizations, geographic locations, journals, hyperlinks, and
#	date-time intervals
# Same as above, but for authors, organizations, geographic locations, journals, hyperlinks,
#	and date-time intervals.
harvester-score -X score-author.conf.xml
harvester-score -X score-org.conf.xml
harvester-score -X score-geo.conf.xml
harvester-score -X score-journal.conf.xml
harvester-score -X score-hyperlink.conf.xml
harvester-score -X score-interval.conf.xml
harvester-score -X score-datetime.conf.xml

#Match
# Rename matches scored above.
harvester-match -X match-main.conf.xml

#Score on authorships
# Same as above, but for authorships.
harvester-score -X score-authorship.conf.xml

#Match
# Rename matching authorships.
harvester-match -X match-authorship.conf.xml

#Qualify
# Remove statements generated by the Translate step that were put there exclusively
#	to assist with Score.
harvester-qualify -X qualify.conf.xml

#ChangeNamespace
# Anything that was not renamed by Match is a brand-new publication, author, etc. which
#	we want to ingest.  Create a unique URI for each and rename it.
harvester-changenamespace -X changenamespace-pub.conf.xml
harvester-changenamespace -X changenamespace-authorship.conf.xml
harvester-changenamespace -X changenamespace-author.conf.xml
harvester-changenamespace -X changenamespace-org.conf.xml
harvester-changenamespace -X changenamespace-geo.conf.xml
harvester-changenamespace -X changenamespace-journal.conf.xml
harvester-changenamespace -X changenamespace-hyperlink.conf.xml
harvester-changenamespace -X changenamespace-interval.conf.xml
harvester-changenamespace -X changenamespace-datetime.conf.xml

#Diff
# Compare this harvest with the previous harvest, to determine what's new with this harvest
#	and what has been removed since the last harvest.
harvester-diff -X diff-subtractions.conf.xml
harvester-diff -X diff-additions.conf.xml

#Transfer
# Based on the results of Diff, add new records to VIVO and remove removed records from VIVO.
#	Do the same for the previous harvest model to keep it up to date.
harvester-transfer -X transfer-subtractions-to-prevharv.conf.xml
harvester-transfer -X transfer-additions-to-prevharv.conf.xml
harvester-transfer -X transfer-subtractions-to-vivo.conf.xml
harvester-transfer -X transfer-additions-to-vivo.conf.xml

echo 'Harvest completed successfully'

